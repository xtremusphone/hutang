{"version":3,"sources":["component/QRContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Component","App","react_default","a","createElement","className","style","textDecorationLine","Button","margin","color","icon","labelPosition","size","Icon","name","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"6NAGyCA,YC2C1BC,MAvCf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,6BAAoBF,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAACC,mBAAoB,iBAAlC,cAApB,yCAEFL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQF,MAAO,CAAEG,OAAQ,IAAOC,MAAM,QAAQC,MAAI,EAACC,cAAc,OAAOC,KAAK,WAC3EX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,KAAK,yBADb,oBAIAb,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQF,MAAO,CAAEG,OAAQ,IAAOC,MAAM,OAAOC,MAAI,EAACC,cAAc,OAAOC,KAAK,WAC1EX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,KAAK,YADb,oBAIAb,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQF,MAAO,CAAEG,OAAQ,IAAOC,MAAM,OAAOC,MAAI,EAACC,cAAc,OAAOC,KAAK,WAC1EX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,KAAK,YADb,oBAIAb,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQF,MAAO,CAAEG,OAAQ,IAAMJ,UAAU,cAAcK,MAAM,SAASC,MAAI,EAACC,cAAc,OAAOC,KAAK,WACnGX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,KAAK,YADb,qBAKFb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,KAAK,WADX,kCAKJb,EAAAC,EAAAC,cAAA,eC3BSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACP5B,EAAAC,EAAAC,cAACF,EAAAC,EAAM4B,WAAP,KACE7B,EAAAC,EAAAC,cAAC4B,EAAD,OAEFC,SAASC,eAAe,SAM1BlB","file":"static/js/main.df52c731.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport QrReader from 'react-qr-scanner'\r\n\r\nexport default class QrContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            result: 'Hold steady to scan QRHutang'\r\n        }\r\n        this.handleScan = this.handleScan.bind(this)\r\n    }\r\n\r\n    handleScan(result){\r\n        this.setState({\r\n            result: result\r\n        })\r\n    }\r\n\r\n    handleError(error){\r\n        console.error(error)\r\n    }\r\n\r\n    render(){\r\n\r\n        const previewStyle = {\r\n            height: 900,\r\n            width: 700,\r\n            display: 'flex',\r\n            \"justify-content\" : \"center\"\r\n        }\r\n\r\n        const camStyle = {\r\n            display: 'flex',\r\n            justifyContent: \"center\",\r\n            marginTop: '-50px'\r\n        }\r\n\r\n        const textStyle = {\r\n            fontSize: '30px',\r\n            \"text-align\" : 'center',\r\n            marginTop: '-50px'\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div style={camStyle}>\r\n                    <QrReader \r\n                        facingMode={\"rear\"}\r\n                        delay={100}\r\n                        style={previewStyle}\r\n                        onError={this.handleError}\r\n                        onScan={this.handleScan}\r\n                        />\r\n                </div>\r\n                <p style={textStyle}>{this.state.result}</p>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport './index.css';\nimport { Button,Icon } from 'semantic-ui-react'\nimport QrContainer from './component/QRContainer'\nimport { faStrikethrough } from '@fortawesome/free-solid-svg-icons';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"Header-container\">\n          <h1>Hutang</h1>\n          <h5>A simple way to <span style={{textDecorationLine: 'line-through'}}>take money</span> manage your borrowing with friends.</h5>\n        </div>\n        <div className=\"Body-container\">\n          <Button style={{ margin: 10 }}  color=\"green\" icon labelPosition='left' size=\"massive\">\n            <Icon name=\"money bill alternate\"/>\n            Kasi Hutang Lah!\n          </Button>\n          <Button style={{ margin: 10 }}  color=\"blue\" icon labelPosition='left' size=\"massive\">\n            <Icon name=\"signing\"/>\n            Bayarlah Hutang!\n          </Button>\n          <Button style={{ margin: 10 }}  color=\"teal\" icon labelPosition='left' size=\"massive\">\n            <Icon name=\"payment\"/>\n            Ampun Bang Jago!\n          </Button>\n          <Button style={{ margin: 10 }} className=\"btn-content\" color=\"orange\" icon labelPosition='left' size=\"massive\">\n            <Icon name=\"history\"/>\n            Aiyo Sudah Lupa!\n          </Button>\n        </div>\n        <div className=\"Bottom-container\">\n          <h6>\n          <Icon name=\"coffee\"/>Developed with love by Amir.\n          </h6>\n        </div>\n      </header>\n      <body>\n        \n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}