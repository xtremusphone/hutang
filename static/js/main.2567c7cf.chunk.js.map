{"version":3,"sources":["component/QRContainer.js","App.js","reportWebVitals.js","index.js"],"names":["QrContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","result","handleScan","bind","assertThisInitialized","setState","error","console","react_default","a","createElement","Fragment","style","display","justifyContent","marginTop","react_qr_scanner_esm","delay","height","width","justify-content","onError","handleError","onScan","Component","App","className","textDecorationLine","Button","margin","color","icon","labelPosition","size","Icon","name","QRContainer_QrContainer","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"6NAGqBA,cAEjB,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,OAAQ,gCAEZR,EAAKS,WAAaT,EAAKS,WAAWC,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KALJA,0EAQPQ,GACPL,KAAKS,SAAS,CACVJ,OAAQA,wCAIJK,GACRC,QAAQD,MAAMA,oCAkBd,OACIE,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,MARI,CACbC,QAAS,OACTC,eAAgB,SAChBC,UAAW,UAMHP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACIC,MAAO,IACPL,MAlBK,CACjBM,OAAQ,IACRC,MAAO,IACPN,QAAS,OACTO,kBAAoB,UAeRC,QAASzB,KAAK0B,YACdC,OAAQ3B,KAAKM,cAErBM,EAAAC,EAAAC,cAAA,sCA5CyBc,aCoC1BC,MAhCf,WACE,OACEjB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACblB,EAAAC,EAAAC,cAAA,UAAQgB,UAAU,cAChBlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,oBACblB,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,6BAAoBF,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAACe,mBAAoB,iBAAlC,cAApB,yCAEFnB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,kBACblB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQhB,MAAO,CAAEiB,OAAQ,IAAOC,MAAM,QAAQC,MAAI,EAACC,cAAc,OAAOC,KAAK,WAC3EzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,KAAK,yBADb,oBAIA3B,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQhB,MAAO,CAAEiB,OAAQ,IAAMH,UAAU,cAAcI,MAAM,SAASC,MAAI,EAACC,cAAc,OAAOC,KAAK,WACnGzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,KAAK,YADb,qBAKF3B,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,oBACblB,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,KAAK,WADX,iCAIF3B,EAAAC,EAAAC,cAAC0B,EAAD,OAEF5B,EAAAC,EAAAC,cAAA,eCpBS2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAArC,KAAA,WAAqBuC,KAAK,SAAAC,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACP1C,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,WAAP,KACE3C,EAAAC,EAAAC,cAAC0C,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.2567c7cf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport QrReader from 'react-qr-scanner'\r\n\r\nexport default class QrContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            result: 'Hold steady to scan QRHutang'\r\n        }\r\n        this.handleScan = this.handleScan.bind(this)\r\n    }\r\n\r\n    handleScan(result){\r\n        this.setState({\r\n            result: result\r\n        })\r\n    }\r\n\r\n    handleError(error){\r\n        console.error(error)\r\n    }\r\n\r\n    render(){\r\n\r\n        const previewStyle = {\r\n            height: 900,\r\n            width: 700,\r\n            display: 'flex',\r\n            \"justify-content\" : \"center\"\r\n        }\r\n\r\n        const camStyle = {\r\n            display: 'flex',\r\n            justifyContent: \"center\",\r\n            marginTop: '-50px'\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div style={camStyle}>\r\n                    <QrReader \r\n                        delay={100}\r\n                        style={previewStyle}\r\n                        onError={this.handleError}\r\n                        onScan={this.handleScan}/>\r\n                </div>\r\n                <p>this.state.result</p>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport './index.css';\nimport { Button,Icon } from 'semantic-ui-react'\nimport QrContainer from './component/QRContainer'\nimport { faStrikethrough } from '@fortawesome/free-solid-svg-icons';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"Header-container\">\n          <h1>Hutang</h1>\n          <h5>A simple way to <span style={{textDecorationLine: 'line-through'}}>take money</span> manage your borrowing with friends.</h5>\n        </div>\n        <div className=\"Body-container\">\n          <Button style={{ margin: 10 }}  color=\"green\" icon labelPosition='left' size=\"massive\">\n            <Icon name=\"money bill alternate\"/>\n            Kasi Hutang Lah!\n          </Button>\n          <Button style={{ margin: 10 }} className=\"btn-content\" color=\"orange\" icon labelPosition='left' size=\"massive\">\n            <Icon name=\"history\"/>\n            Aiyo Sudah Lupa!\n          </Button>\n        </div>\n        <div className=\"Bottom-container\">\n          <h6>\n          <Icon name=\"coffee\"/>Developed with love by Amir.\n          </h6>\n        </div>\n        <QrContainer/>\n      </header>\n      <body>\n        \n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}